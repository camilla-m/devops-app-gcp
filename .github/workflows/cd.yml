name: Deploy to GKE

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  DEPLOYMENT_NAME: devops-app
  IMAGE: devops-app-gcp
  NAMESPACE: devops-app

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true
    
    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker us-central1-docker.pkg.dev
        gcloud auth configure-docker gcr.io
    
    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} \
          --zone=${{ secrets.GKE_ZONE }} \
          --project=${{ secrets.GCP_PROJECT_ID }}
    
    - name: Build Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA \
          -t gcr.io/$PROJECT_ID/$IMAGE:latest .
    
    - name: Push Docker image
      run: |
        docker push gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        docker push gcr.io/$PROJECT_ID/$IMAGE:latest

    - name: Install GKE gcloud auth plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin
        export USE_GKE_GCLOUD_AUTH_PLUGIN=True

    - name: Deploy to GKE
      run: |
        kubectl set image deployment/$DEPLOYMENT_NAME \
          $DEPLOYMENT_NAME=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA \
          -n $NAMESPACE
        kubectl rollout status deployment/$DEPLOYMENT_NAME \
          -n $NAMESPACE --timeout=300s
        kubectl get pods -n $NAMESPACE -l app=$DEPLOYMENT_NAME
    
    - name: Run smoke tests
      run: |
        EXTERNAL_IP=$(kubectl get service devops-app-service -n $NAMESPACE \
          -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        
        for i in {1..30}; do
          if [ ! -z "$EXTERNAL_IP" ]; then
            break
          fi
          echo "Aguardando IP externo... ($i/30)"
          sleep 10
          EXTERNAL_IP=$(kubectl get service devops-app-service -n $NAMESPACE \
            -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        done
        
        if [ -z "$EXTERNAL_IP" ]; then
          echo "ERRO: IP externo não foi atribuído"
          exit 1
        fi
        
        curl -f --max-time 10 http://$EXTERNAL_IP/health
        curl -f --max-time 10 http://$EXTERNAL_IP/api/info
        echo "Deploy realizado com sucesso!"